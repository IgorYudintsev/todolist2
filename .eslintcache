[{"D:\\Programer\\IT-Incubator\\todolist2\\src\\index.tsx":"1","D:\\Programer\\IT-Incubator\\todolist2\\src\\reportWebVitals.ts":"2","D:\\Programer\\IT-Incubator\\todolist2\\src\\app\\store.ts":"3","D:\\Programer\\IT-Incubator\\todolist2\\src\\features\\TodolistsList\\todolists-reducer.ts":"4","D:\\Programer\\IT-Incubator\\todolist2\\src\\components\\AddItemForm\\AddItemForm.tsx":"5","D:\\Programer\\IT-Incubator\\todolist2\\src\\components\\EditableSpan\\EditableSpan.tsx":"6","D:\\Programer\\IT-Incubator\\todolist2\\src\\app\\App.tsx":"7","D:\\Programer\\IT-Incubator\\todolist2\\src\\app\\App-reducer.ts":"8","D:\\Programer\\IT-Incubator\\todolist2\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx":"9","D:\\Programer\\IT-Incubator\\todolist2\\src\\features\\TodolistsList\\TodolistsList.tsx":"10","D:\\Programer\\IT-Incubator\\todolist2\\src\\api\\todolists-api.ts":"11","D:\\Programer\\IT-Incubator\\todolist2\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx":"12","D:\\Programer\\IT-Incubator\\todolist2\\src\\features\\TodolistsList\\tasks-reducer.ts":"13","D:\\Programer\\IT-Incubator\\todolist2\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx":"14","D:\\Programer\\IT-Incubator\\todolist2\\src\\features\\Login\\Login.tsx":"15","D:\\Programer\\IT-Incubator\\todolist2\\src\\features\\Login\\auth-reducer.tsx":"16","D:\\Programer\\IT-Incubator\\todolist2\\src\\app\\app-reducer.ts":"17"},{"size":772,"mtime":1622904114283,"results":"18","hashOfConfig":"19"},{"size":425,"mtime":1607869388000,"results":"20","hashOfConfig":"19"},{"size":1097,"mtime":1597327450000,"results":"21","hashOfConfig":"19"},{"size":5509,"mtime":1621440078637,"results":"22","hashOfConfig":"19"},{"size":1595,"mtime":1596715562000,"results":"23","hashOfConfig":"19"},{"size":952,"mtime":1594154724000,"results":"24","hashOfConfig":"19"},{"size":2607,"mtime":1622993602147,"results":"25","hashOfConfig":"19"},{"size":1085,"mtime":1621162895698,"results":"26","hashOfConfig":"19"},{"size":4304,"mtime":1622972657929,"results":"27","hashOfConfig":"19"},{"size":4023,"mtime":1622973188469,"results":"28","hashOfConfig":"19"},{"size":3151,"mtime":1622993533298,"results":"29","hashOfConfig":"19"},{"size":1773,"mtime":1596295538000,"results":"30","hashOfConfig":"19"},{"size":5961,"mtime":1621439724003,"results":"31","hashOfConfig":"19"},{"size":1092,"mtime":1596716576000,"results":"32","hashOfConfig":"19"},{"size":4646,"mtime":1622971844427,"results":"33","hashOfConfig":"19"},{"size":2135,"mtime":1622993380367,"results":"34","hashOfConfig":"19"},{"size":2218,"mtime":1622991922444,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"qch34g",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Programer\\IT-Incubator\\todolist2\\src\\index.tsx",["76","77"],"D:\\Programer\\IT-Incubator\\todolist2\\src\\reportWebVitals.ts",[],["78","79"],"D:\\Programer\\IT-Incubator\\todolist2\\src\\app\\store.ts",[],["80","81"],"D:\\Programer\\IT-Incubator\\todolist2\\src\\features\\TodolistsList\\todolists-reducer.ts",[],"D:\\Programer\\IT-Incubator\\todolist2\\src\\components\\AddItemForm\\AddItemForm.tsx",["82","83","84"],"D:\\Programer\\IT-Incubator\\todolist2\\src\\components\\EditableSpan\\EditableSpan.tsx",[],"D:\\Programer\\IT-Incubator\\todolist2\\src\\app\\App.tsx",["85","86"],"D:\\Programer\\IT-Incubator\\todolist2\\src\\app\\App-reducer.ts",[],["87","88"],"D:\\Programer\\IT-Incubator\\todolist2\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx",["89","90","91","92","93","94","95","96","97"],"import React, {useCallback, useEffect} from 'react'\r\nimport {AddItemForm} from '../../../components/AddItemForm/AddItemForm'\r\nimport {EditableSpan} from '../../../components/EditableSpan/EditableSpan'\r\nimport {Button, IconButton} from '@material-ui/core'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {Task} from './Task/Task'\r\nimport {TaskStatuses, TaskType} from '../../../api/todolists-api'\r\nimport {FilterValuesType, TodolistDomainType} from '../todolists-reducer'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {fetchTasksTC} from '../tasks-reducer'\r\nimport {AppRootStateType} from \"../../../app/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    todolist: TodolistDomainType\r\n    tasks: Array<TaskType>\r\n    changeFilter: (value: FilterValuesType, todolistId: string) => void\r\n    addTask: (title: string, todolistId: string) => void\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n    removeTodolist: (id: string) => void\r\n    changeTodolistTitle: (id: string, newTitle: string) => void\r\n    demo?: boolean\r\n}\r\n\r\nexport const Todolist = React.memo(function ({demo = false, ...props}: PropsType) {\r\n    console.log('Todolist called')\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        if (demo) {\r\n            return\r\n        }\r\n        const thunk = fetchTasksTC(props.todolist.id)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTask = useCallback((title: string) => {\r\n        props.addTask(title, props.todolist.id)\r\n    }, [props.addTask, props.todolist.id])\r\n\r\n    const removeTodolist = () => {\r\n        props.removeTodolist(props.todolist.id)\r\n    }\r\n    const changeTodolistTitle = useCallback((title: string) => {\r\n        props.changeTodolistTitle(props.todolist.id, title)\r\n    }, [props.todolist.id, props.changeTodolistTitle])\r\n\r\n    const onAllClickHandler = useCallback(() => props.changeFilter('all', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n    const onActiveClickHandler = useCallback(() => props.changeFilter('active', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n    const onCompletedClickHandler = useCallback(() => props.changeFilter('completed', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n\r\n\r\n    let tasksForTodolist = props.tasks\r\n\r\n    if (props.todolist.filter === 'active') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.New)\r\n    }\r\n    if (props.todolist.filter === 'completed') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.Completed)\r\n    }\r\n\r\n\r\n    return <div>\r\n        <h3><EditableSpan value={props.todolist.title} onChange={changeTodolistTitle}/>\r\n            <IconButton onClick={removeTodolist} disabled={props.todolist.entityStatus === 'loading'}>\r\n                <Delete/>\r\n            </IconButton>\r\n        </h3>\r\n        <AddItemForm addItem={addTask} disabled={props.todolist.entityStatus === 'loading'}/>\r\n        <div>\r\n            {\r\n                tasksForTodolist.map(t => <Task key={t.id} task={t} todolistId={props.todolist.id}\r\n                                                removeTask={props.removeTask}\r\n                                                changeTaskTitle={props.changeTaskTitle}\r\n                                                changeTaskStatus={props.changeTaskStatus}\r\n                />)\r\n            }\r\n        </div>\r\n        <div style={{paddingTop: '10px'}}>\r\n            <Button variant={props.todolist.filter === 'all' ? 'outlined' : 'text'}\r\n                    onClick={onAllClickHandler}\r\n                    color={'default'}\r\n            >All\r\n            </Button>\r\n            <Button variant={props.todolist.filter === 'active' ? 'outlined' : 'text'}\r\n                    onClick={onActiveClickHandler}\r\n                    color={'primary'}>Active\r\n            </Button>\r\n            <Button variant={props.todolist.filter === 'completed' ? 'outlined' : 'text'}\r\n                    onClick={onCompletedClickHandler}\r\n                    color={'secondary'}>Completed\r\n            </Button>\r\n        </div>\r\n    </div>\r\n})\r\n\r\n\r\n",["98","99"],"D:\\Programer\\IT-Incubator\\todolist2\\src\\features\\TodolistsList\\TodolistsList.tsx",["100","101","102","103","104","105","106","107"],"D:\\Programer\\IT-Incubator\\todolist2\\src\\api\\todolists-api.ts",[],"D:\\Programer\\IT-Incubator\\todolist2\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx",["108","109","110"],"D:\\Programer\\IT-Incubator\\todolist2\\src\\features\\TodolistsList\\tasks-reducer.ts",["111","112","113"],"D:\\Programer\\IT-Incubator\\todolist2\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx",[],"D:\\Programer\\IT-Incubator\\todolist2\\src\\features\\Login\\Login.tsx",["114","115","116"],"import React from 'react'\r\nimport {useFormik} from 'formik';\r\nimport {Checkbox, FormControl, FormControlLabel, FormGroup, FormLabel, TextField, Button, Grid} from '@material-ui/core'\r\nimport {addTaskTC} from \"../TodolistsList/tasks-reducer\";\r\nimport {loginTC} from \"./auth-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {LoginParamsType} from \"../../api/todolists-api\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n}\r\n\r\n\r\nexport const Login = () => {\r\n    let dispatch = useDispatch()\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length < 3) {\r\n                errors.password = 'Must be 3+ characters';\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            alert(JSON.stringify(values, null, 2));\r\n            formik.resetForm()//чтобы зачищалось поле\r\n\r\n            dispatch(loginTC(values))\r\n        },\r\n    });\r\n    const isLooggedIn = useSelector<AppRootStateType>(state => state.log.isLoggedIn);\r\n    if(isLooggedIn){\r\n        return <Redirect to={'/'}/>\r\n    }\r\n\r\n    return <Grid container justify=\"center\">\r\n        <Grid item xs={4}>\r\n            <FormControl>\r\n                <FormLabel>\r\n                    <p>To log in get registered\r\n                        <a href={'https://social-network.samuraijs.com/'}\r\n                           target={'_blank'}>here\r\n                        </a>\r\n                    </p>\r\n                    <p>or use common test account credentials:</p>\r\n                    <p>Email: free@samuraijs.com</p>\r\n                    <p>Password: free</p>\r\n                </FormLabel>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <FormGroup>\r\n                        <TextField\r\n                            label=\"Email\"\r\n                            margin=\"normal\"\r\n                            // name=\"email\"\r\n                            // onChange={formik.handleChange}\r\n                            // onBlur={formik.handleBlur}\r\n                            // value={formik.values.email}\r\n                            // это заменится одной строкой\r\n                            {...formik.getFieldProps('email')}\r\n                        />\r\n                        {formik.touched.email && formik.errors.email ?\r\n                            <div style={{color: 'red'}}>{formik.errors.email}</div> : null}\r\n                        <TextField\r\n                            type=\"password\"\r\n                            label=\"Password\"\r\n                            // margin=\"normal\"\r\n                            // name=\"password\"\r\n                            // onChange={formik.handleChange}\r\n                            // onBlur={formik.handleBlur}\r\n                            // value={formik.values.password}\r\n                            // это заменится одной строкой\r\n                            {...formik.getFieldProps('password')}\r\n                        />\r\n                        {formik.touched.password && formik.errors.password ?\r\n                            <div style={{color: 'red'}}>{formik.errors.password}</div> : null}\r\n                        <FormControlLabel\r\n                            label={'Remember me'}\r\n                            control={<Checkbox\r\n                                // name=\"rememberMe\"\r\n                                // onChange={formik.handleChange}\r\n                                // checked={formik.values.rememberMe}\r\n                                // это заменится одной строкой\r\n                                {...formik.getFieldProps('rememberMe')}\r\n                            />}\r\n                        />\r\n                        <Button type={'submit'} variant={'contained'} color={'primary'}>Login</Button>\r\n                    </FormGroup>\r\n                </form>\r\n            </FormControl>\r\n        </Grid>\r\n    </Grid>\r\n}\r\n","D:\\Programer\\IT-Incubator\\todolist2\\src\\features\\Login\\auth-reducer.tsx",["117","118"],"D:\\Programer\\IT-Incubator\\todolist2\\src\\app\\app-reducer.ts",[],{"ruleId":"119","severity":1,"message":"120","line":8,"column":9,"nodeType":"121","messageId":"122","endLine":8,"endColumn":15},{"ruleId":"119","severity":1,"message":"123","line":9,"column":24,"nodeType":"121","messageId":"122","endLine":9,"endColumn":29},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"124","replacedBy":"128"},{"ruleId":"126","replacedBy":"129"},{"ruleId":"119","severity":1,"message":"130","line":2,"column":9,"nodeType":"121","messageId":"122","endLine":2,"endColumn":12},{"ruleId":"119","severity":1,"message":"131","line":2,"column":14,"nodeType":"121","messageId":"122","endLine":2,"endColumn":20},{"ruleId":"119","severity":1,"message":"132","line":2,"column":22,"nodeType":"121","messageId":"122","endLine":2,"endColumn":33},{"ruleId":"119","severity":1,"message":"133","line":18,"column":45,"nodeType":"121","messageId":"122","endLine":18,"endColumn":59},{"ruleId":"134","severity":1,"message":"135","line":34,"column":8,"nodeType":"136","endLine":34,"endColumn":10,"suggestions":"137"},{"ruleId":"124","replacedBy":"138"},{"ruleId":"126","replacedBy":"139"},{"ruleId":"119","severity":1,"message":"140","line":9,"column":22,"nodeType":"121","messageId":"122","endLine":9,"endColumn":33},{"ruleId":"119","severity":1,"message":"141","line":11,"column":9,"nodeType":"121","messageId":"122","endLine":11,"endColumn":25},{"ruleId":"119","severity":1,"message":"142","line":12,"column":9,"nodeType":"121","messageId":"122","endLine":12,"endColumn":17},{"ruleId":"134","severity":1,"message":"143","line":36,"column":8,"nodeType":"136","endLine":36,"endColumn":10,"suggestions":"144"},{"ruleId":"134","severity":1,"message":"145","line":40,"column":8,"nodeType":"136","endLine":40,"endColumn":42,"suggestions":"146"},{"ruleId":"134","severity":1,"message":"145","line":47,"column":8,"nodeType":"136","endLine":47,"endColumn":54,"suggestions":"147"},{"ruleId":"134","severity":1,"message":"145","line":49,"column":95,"nodeType":"136","endLine":49,"endColumn":134,"suggestions":"148"},{"ruleId":"134","severity":1,"message":"145","line":50,"column":101,"nodeType":"136","endLine":50,"endColumn":140,"suggestions":"149"},{"ruleId":"134","severity":1,"message":"145","line":51,"column":107,"nodeType":"136","endLine":51,"endColumn":146,"suggestions":"150"},{"ruleId":"124","replacedBy":"151"},{"ruleId":"126","replacedBy":"152"},{"ruleId":"134","severity":1,"message":"153","line":36,"column":8,"nodeType":"136","endLine":36,"endColumn":10,"suggestions":"154"},{"ruleId":"134","severity":1,"message":"155","line":41,"column":8,"nodeType":"136","endLine":41,"endColumn":10,"suggestions":"156"},{"ruleId":"134","severity":1,"message":"155","line":46,"column":8,"nodeType":"136","endLine":46,"endColumn":10,"suggestions":"157"},{"ruleId":"134","severity":1,"message":"155","line":51,"column":8,"nodeType":"136","endLine":51,"endColumn":10,"suggestions":"158"},{"ruleId":"134","severity":1,"message":"155","line":56,"column":8,"nodeType":"136","endLine":56,"endColumn":10,"suggestions":"159"},{"ruleId":"134","severity":1,"message":"155","line":61,"column":8,"nodeType":"136","endLine":61,"endColumn":10,"suggestions":"160"},{"ruleId":"134","severity":1,"message":"155","line":66,"column":8,"nodeType":"136","endLine":66,"endColumn":10,"suggestions":"161"},{"ruleId":"134","severity":1,"message":"155","line":71,"column":8,"nodeType":"136","endLine":71,"endColumn":10,"suggestions":"162"},{"ruleId":"134","severity":1,"message":"145","line":15,"column":97,"nodeType":"136","endLine":15,"endColumn":130,"suggestions":"163"},{"ruleId":"134","severity":1,"message":"145","line":20,"column":8,"nodeType":"136","endLine":20,"endColumn":41,"suggestions":"164"},{"ruleId":"134","severity":1,"message":"145","line":24,"column":8,"nodeType":"136","endLine":24,"endColumn":41,"suggestions":"165"},{"ruleId":"119","severity":1,"message":"166","line":5,"column":9,"nodeType":"121","messageId":"122","endLine":5,"endColumn":22},{"ruleId":"119","severity":1,"message":"167","line":6,"column":9,"nodeType":"121","messageId":"122","endLine":6,"endColumn":17},{"ruleId":"119","severity":1,"message":"168","line":7,"column":9,"nodeType":"121","messageId":"122","endLine":7,"endColumn":19},{"ruleId":"119","severity":1,"message":"169","line":4,"column":9,"nodeType":"121","messageId":"122","endLine":4,"endColumn":18},{"ruleId":"119","severity":1,"message":"170","line":7,"column":9,"nodeType":"121","messageId":"122","endLine":7,"endColumn":24},{"ruleId":"171","severity":1,"message":"172","line":61,"column":28,"nodeType":"173","endLine":61,"endColumn":45},{"ruleId":"119","severity":1,"message":"174","line":3,"column":18,"nodeType":"121","messageId":"122","endLine":3,"endColumn":30},{"ruleId":"119","severity":1,"message":"175","line":5,"column":9,"nodeType":"121","messageId":"122","endLine":5,"endColumn":18},"@typescript-eslint/no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","no-native-reassign",["176"],"no-negated-in-lhs",["177"],["176"],["177"],"'Box' is defined but never used.","'Button' is defined but never used.","'FormControl' is defined but never used.","'setAppStatusAC' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["178"],["176"],["177"],"'useSelector' is defined but never used.","'AppRootStateType' is defined but never used.","'Redirect' is defined but never used.","React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'props.todolist.id'. Either include them or remove the dependency array.",["179"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["180"],["181"],["182"],["183"],["184"],["176"],["177"],"React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'isLooggedIn'. Either include them or remove the dependency array.",["185"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["186"],["187"],["188"],["189"],["190"],["191"],["192"],["193"],["194"],["195"],"'setAppErrorAC' is defined but never used.","'Simulate' is defined but never used.","'AxiosError' is defined but never used.","'addTaskTC' is defined but never used.","'LoginParamsType' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'todolistsAPI' is defined but never used.","'addTaskAC' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"200","fix":"202"},{"desc":"200","fix":"203"},{"desc":"200","fix":"204"},{"desc":"200","fix":"205"},{"desc":"206","fix":"207"},{"desc":"196","fix":"208"},{"desc":"196","fix":"209"},{"desc":"196","fix":"210"},{"desc":"196","fix":"211"},{"desc":"196","fix":"212"},{"desc":"196","fix":"213"},{"desc":"196","fix":"214"},{"desc":"200","fix":"215"},{"desc":"200","fix":"216"},{"desc":"200","fix":"217"},"Update the dependencies array to be: [dispatch]",{"range":"218","text":"219"},"Update the dependencies array to be: [demo, dispatch, props.todolist.id]",{"range":"220","text":"221"},"Update the dependencies array to be: [props]",{"range":"222","text":"223"},{"range":"224","text":"223"},{"range":"225","text":"223"},{"range":"226","text":"223"},{"range":"227","text":"223"},"Update the dependencies array to be: [demo, dispatch, isLooggedIn]",{"range":"228","text":"229"},{"range":"230","text":"219"},{"range":"231","text":"219"},{"range":"232","text":"219"},{"range":"233","text":"219"},{"range":"234","text":"219"},{"range":"235","text":"219"},{"range":"236","text":"219"},{"range":"237","text":"223"},{"range":"238","text":"223"},{"range":"239","text":"223"},[1241,1243],"[dispatch]",[1573,1575],"[demo, dispatch, props.todolist.id]",[1690,1724],"[props]",[1955,2001],[2100,2139],[2242,2281],[2390,2429],[1321,1323],"[demo, dispatch, isLooggedIn]",[1492,1494],[1663,1665],[1868,1870],[2081,2083],[2282,2284],[2429,2431],[2608,2610],[765,798],[1071,1104],[1261,1294]]